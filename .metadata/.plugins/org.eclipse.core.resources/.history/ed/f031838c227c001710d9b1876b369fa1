package bank.management.system;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;

/**
 * Entity class which acts as a persistent object. This class is a POJO,
 * used for convenience as a reference entity object while interacting
 * with the controller bean.
 * 
 * 
 * @author Albert Jozsa-Kiraly
 *
 */
public class BankAccount {

	// Customer attributes
	private String firstName = null;
	private String lastName = null;
	private String gender = null;
	private String dateOfBirth = null; // Date of birth is a string so it will be easier to split 
	private String maritalStatus = null;
	private String addressLine1 = null;
	private String addressLine2 = null;
	private String addressLine3 = null;
	private String phoneNumber = null;	// Phone number is a string so 0 can be displayed at the front if needed
	private String accountType = null;
	private double balance = 0;
	private String accountNumber = null; // Account number is a string so 0 can be displayed at the front if needed

	//private Date DateOfCreation = null;

	//private static final DateFormat format = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
	//private Calendar dateOfCreation; // The date the account was created

	public BankAccount(String firstName, String lastName, String gender, String dateOfBirth,
			String maritalStatus, String addressLine1, String addressLine2,	String addressLine3,
			String phoneNumber, String accountType, double balance, String accountNumber) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.gender = gender;
		this.dateOfBirth = dateOfBirth;
		this.maritalStatus = maritalStatus;
		this.addressLine1 = addressLine1;
		this.addressLine2 = addressLine2;
		this.addressLine3 = addressLine3;
		this.phoneNumber = phoneNumber;
		this.accountType = accountType;
		this.balance = balance;
		this.accountNumber = accountNumber;
		//this.dateOfCreation = Calendar.getInstance();
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getFirstName() {
		return this.firstName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getLastName() {
		return this.lastName;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	public String getGender() {
		return this.gender;
	}

	public void setDateOfBirth(String dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	public String getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setMaritalStatus(String maritalStatus) {
		this.maritalStatus = maritalStatus;
	}

	public String getMaritalStatus() {
		return this.maritalStatus;
	}

	public void setAddressLine1(String addressLine1) {
		this.addressLine1 = addressLine1;
	}

	public String getAddressLine1() {
		return this.addressLine1;
	}

	public void setAddressLine2(String addressLine2) {
		this.addressLine2 = addressLine2;
	}

	public String getAddressLine2() {
		return this.addressLine2;
	}

	public void setAddressLine3(String addressLine3) {
		this.addressLine3 = addressLine3;
	}

	public String getAddressLine3() {
		return this.addressLine3;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setAccountType(String accountType) {
		this.accountType = accountType;
	}

	public String getAccountType() {
		return this.accountType;
	}

	public void setBalance(double balance) {
		this.balance = balance;
	}

	public double getBalance() {
		return this.balance;
	}

	public void setAccountNumber(String accountNumber) {
		this.accountNumber = accountNumber;
	}

	public String getAccountNumber() {
		return this.accountNumber;
	}

//	// TODO Make this nicer
//	public String toString() {
//		return " " + balance + " " + accountNumber;
//	}

//	// Delete methods from down below
//
//
//	/**
//	 * Deposit a specific amount of money to a given account.
//	 * @param amount to be deposited
//	 */
//	public void deposit(double amount) {		
//		if(amount > 0) {
//			this.balance = getBalance() + amount;
//		}
//		// Else: enter a valid amount to be deposited. Maybe JOption pane?
//	}
//
//	/**
//	 * Withdraw a specific amount of money from a given account.
//	 * The withdrawal is only possible if the amount to be withdrawn 
//	 * is greater than zero and there is enough money on the balance 
//	 * to be withdrawn.
//	 * @param amount to be withdrawn 
//	 */
//	public void withdraw(double amount) {
//		if(amount > 0 && balance >= amount) {
//			this.balance = getBalance() - amount;
//		}
//		// Else: insufficient funds!! How to return this?
//	}
//
//	/**
//	 * Transfer a specific amount of money to a payee's account.
//	 * @param amount amount to be transferred
//	 * @param payeeAccount the payee's account
//	 */
//	public void transfer(double amount, BankAccount payeeAccount) {
//
//		/* Withdraw the amount specified plus 1 because every transfer 
//		incurs a charge paid by the remitter */
//		this.withdraw(amount + 1);
//		payeeAccount.deposit(amount);
//	}
}
